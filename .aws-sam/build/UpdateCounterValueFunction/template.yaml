AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: "update website visitor counter exposed in API Gateway REST API from DynamoDB"

Globals:
  Function:
    Runtime: python3.7
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"

Resources: 
  VisitorCounterTbl:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: visitor-count-table
      PrimaryKey:
        Name: website_id
        Type: String
      ProvisionedThroughput: 
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  GetCounterValueFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: read-write-visitor-function
      CodeUri: src/
      Handler: index.lambda_handler
      MemorySize: 128
      Runtime: python3.7
      Timeout: 3
      # Role: !Sub arn:aws:iam::${AWS::AccountId}:role/service-role/${!GetAtt GetCounterValueFunctionRole.RoleName}
      Role: arn:aws:iam::836373823767:role/service-role/get-current-counter-value-role-nk940r0z
      Policies:
      # Give DynamoDB Full Access to your Lambda Function
      - AmazonDynamoDBFullAccess
  
  UpdateCounterValueFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: write-visitor-function
      CodeUri: src/
      Handler: update-counter.lambda_handler
      MemorySize: 128
      Runtime: python3.7
      Role: !GetAtt GetCounterValueFunctionRole.Arn
      Timeout: 3
      Events:
        Endpoint:
          Type: Api
          Properties:
            Path: /update
            Method: GET
                 
  GetCounterValueFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      Path:
      AssumeRolePolicyDocument: 
      Policies:
        - 
         PolicyName: "root"
         PolicyDocument:
           Version: "2012-10-17"
           Statement:
              - 
                Effect: "Allow"
                Principal:
                  Service:
                    - lambda.amazonaws.com
                    
                Action:
                  - logs: "CreateLogStream"
                  - logs: "PutLogEvents"
                Resource: "*"      
        
  # GetCounterValueFunctionRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     RoleName: "AllowGetItemAndUpdateItemPolicy"
  #     Path: "/"
  #     AssumeRolePolicyDocument: 
  #       Version: '2012-10-17'
  #       Statement:
  #       - Effect: Allow
  #         Principal:
  #           Service:
  #           - lambda.amazonaws.com
  #         Action:
  #         - sts:AssumeRole
  #     ManagedPolicyArns:
  #       - !Ref AllowGetItemAndUpdateItemPolicy

  # AllowGetItemAndUpdateItemPolicy:
  #   Type: AWS::IAM::ManagedPolicy
  #   Properties:
  #     PolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #         -
  #           Sid: AllowGetItemAndUpdateItem
  #           Effect: Allow
  #           Action:
  #             - dynamodb:GetItem
  #             - dynamodb:UpdateItem
  #           Resource: "*"



